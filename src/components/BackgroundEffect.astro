<div id="bg-grid" aria-hidden="true"></div>

<script lang="javascript">
const grid = document.getElementById("bg-grid");
const gridAutoGeneratedClass = grid.className;

// calculate sqaure cells props
const rows = 5;
const rowHeight = window.innerHeight / rows;
const columns = Math.ceil(window.innerWidth / rowHeight);
grid.style.setProperty("--columns", columns);

// generate cells
for (let i = 0; i < rows * columns; i++) {
	const cell = document.createElement("div");
	cell.className = gridAutoGeneratedClass; // THERE IS AN AUTO GENERATED CLASS NAME FOR PARENT
	grid.appendChild(cell);
}

let lastHovered = -1;
let mouseDown = false;
let lastHue = 0;
const prevDown = {};

const render = (event) => {
	const [x, y] = [event.clientX, event.clientY];
	const row = Math.floor((y * rows) / window.innerHeight);
	const column = Math.floor((x * columns) / window.innerWidth);

	const cellIndex =
		row < rows || column > columns ? row * columns + column : -1;
	const hovered = grid.children[cellIndex];

	if (cellIndex >= 0) {
		if (!prevDown[cellIndex] && (mouseDown || window.rainbowMode)) {
			const hue =
				(lastHue + 12 + Math.floor(Math.random() * 16)) % 360;
			hovered.style.setProperty(
				"--click-bg",
				`hsl(${hue}deg, 100%, 50%, 0.5)`
			);
			lastHue = hue;
		}

		hovered.classList.add("hovered");
		hovered.classList.toggle(
			"clicked",
			mouseDown || window.rainbowMode
		);
		hovered.classList.toggle(
			"hovered-fast-trans",
			!prevDown[cellIndex] && !(mouseDown || window.rainbowMode)
		);
	}

	if (lastHovered >= 0 && lastHovered !== cellIndex) {
		grid.children[lastHovered].classList.remove(
			"hovered",
			"hovered-fast-trans",
			"clicked"
		);
		prevDown[lastHovered] = false;
	}

	lastHovered = cellIndex;
	prevDown[cellIndex] = mouseDown || window.rainbowMode;
};

document.addEventListener("mousemove", render, {
	capture: true,
	passive: true,
});
document.addEventListener(
	"mouseleave",
	() => render({ clientX: -1, clientY: -1 }),
	{ passive: true }
);
document.addEventListener(
	"mousedown",
	(event) => {
		mouseDown = true;
		render(event);
	},
	{ capture: true, passive: true }
);
document.addEventListener(
	"mouseup",
	(event) => {
		mouseDown = false;
		render(event);
	},
	{ capture: true, passive: true }
);
document.addEventListener(
	"dragend",
	(event) => {
		mouseDown = false;
		render(event);
	},
	{ capture: true, passive: true }
);
</script>

<style>
	#bg-grid {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		display: grid;
		z-index: -2;
		pointer-events: none;
		filter: blur(10px);
		grid-template-columns: repeat(var(--columns), 1fr);
	}

	#bg-grid div {
		background: #f8f9fa;
		transition: 800ms background linear;
		border-radius: 50%;

		&.hovered {
			background: #e9ecef;
			animation: pulse 1s ease-in-out infinite;
		}

		&.hovered-fast-trans {
			transition: 100ms background linear;
		}

		&.clicked {
			background: var(--click-bg);
			transition: 10ms background linear;
		}
	}

	@keyframes pulse {
		0% {
			transform: scale(1);
			/* border-radius: 50%; */
			/* box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.7); */
		}
		50% {
			transform: scale(1.1);
			/* border-radius: 50%; */
			/* box-shadow: 0 0 0 10px rgba(0, 0, 0, 0); */
		}
		100% {
			transform: scale(1);
			/* border-radius: 50%; */
			/* box-shadow: 0 0 0 0 rgba(0, 0, 0, 0); */
		}
	}
</style>
